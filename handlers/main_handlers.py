from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram import F
import sqlite3

from config import config
from keyboards.keyboards import main_keyboard, profile_inline_keyboard, create_products_keyboard, get_admin_keyboard, back_to_main
from functions.functions import get_user_balance, create_user, get_user_purchase_count
from states.states import FSMStates

main_router = Router()


@main_router.message(Command("start"))
async def start_handler(message: Message):
    create_user(message.from_user.id)
    await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—É—Ç—Å–≤—É—é –≤ VDS Market! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–∏ÃÜ—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard(message.from_user.id))

@main_router.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: Message):
    balance = get_user_balance(message.from_user.id)
    purchase_count = get_user_purchase_count(message.from_user.id)

    text = (f"üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n"
        f"üÜî ID: <i>{message.from_user.id}</i>\n"
        f"üí∞ –ë–∞–ª–∞–Ω—Å: <i>{balance:.2f}$</i>\n"
        f"üõí –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <i>{purchase_count}</i>")
    await message.answer(text, reply_markup=profile_inline_keyboard)


@main_router.message(F.text == "üìú –¢–æ–≤–∞—Ä—ã")
async def products_handler(message: Message):
    page = 0
    keyboard = create_products_keyboard(page)
    await message.answer("""üñ• –î–µ–¥–∏–∫–∏ –≤ –Ω–∞–ª–∏—á–∏–∏

‚ö°Ô∏è –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –¥–µ–¥–∏–∫ –∏ —É–¥–æ–±–Ω—ã–π –≤–∞–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –¥–µ–¥–∏–∫–∞.

üî• –°—Ä–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏–∏ - 25 –î–Ω–µ–π (–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–∏–ª–ª–∏–Ω–≥)

üõç –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ –≤ 21:00
""", reply_markup=keyboard)


@main_router.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def products_handler(message: Message):
    await message.answer("–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å - @romauuka")


@main_router.message(F.text == "–ú–æ–∏ VDS")
async def my_vds_handler(message: Message):
    user_id = message.from_user.id
    
    conn = sqlite3.connect("vds_shop.db")
    cursor = conn.cursor()

    cursor.execute("SELECT ip, login, password, cores, ram, ssd, geo, price FROM purchases WHERE telegram_id = ?", (user_id,))
    purchases = cursor.fetchall()



    if purchases:
        purchase_list = "\n\n".join([
            f"üîπ <b>IP:</b> {ip}\n"
            f"üîπ <b>–õ–æ–≥–∏–Ω:</b> {login}\n"
            f"üîπ <b>–ü–∞—Ä–æ–ª—å:</b> {password}\n"
            f"üîπ <b>{cores} –Ø–¥–µ—Ä | {ram}GB RAM | {ssd}GB SSD</b>\n"
            f"üí∞ <b>–¶–µ–Ω–∞:</b> {price}$"
            for ip, login, password, cores, ram, ssd, geo, price in purchases
        ])
        
        await message.answer(f"üñ• <b>–í–∞—à–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ VDS:</b>\n\n{purchase_list}")
    else:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∫—É–ø–ª–µ–Ω–Ω—ã—Ö VDS.")

@main_router.message(F.text == "–ü—Ä–æ–º–æ–∫–æ–¥")
async def promo_code_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:", reply_markup=back_to_main())
    await state.set_state(FSMStates.waiting_for_promo_code)



@main_router.message(F.text == "üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_handler(message: Message):
    telegram_id = message.from_user.id
    if telegram_id in config.admin_ids:
        keyboard = get_admin_keyboard()
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=keyboard)
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")